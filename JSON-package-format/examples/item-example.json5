{
    // We should require a format/version identifier to help make evolving the
    // format safe.
    "@type": "https://schemas.cudl.lib.cam.ac.uk/package/v1/item.json",

  // First-class support for linking additional data to item (rather than just
  // referencing in an ad-hoc way with in the above "properties" section.)
  // Additional data related to the item.
  // Provides a means for attaching non-display oriented data, e.g:
  // - data for search indexes
  // - source data in an existing format, e.g TEI
  // Loaders can automatically generate item data from data referenced here, and
  // merge it with item data in this file. E.g. most of an item could be derived
  // from a TEI file, with a few overrides here.
  "data": [
    // I think best to have @type as only required attr. Can apply default role
    // based on @type value.
    // Validators can perform specialised validation of data entries based on
    // a role value. e.g CUDL items might use cudl-role:item-properties in
    // addition to cdl-role:item-properties, and we can apply more restrictive
    // validation to properties when cudl-role:item-properties is present.
    {
      // Items have a bunch of properties at the top level which are mostly about
      // how CUDL should handle the item, not about the object being described.
      // i.e. things that we don't directly show the user. e.g. "embeddable",
      // "sourceData", "itemType", "allTranscriptionDiplomaticURL"
      //
      // I propose this properties data be an open set of key-value pairs. e.g.
      // values can be bool/number/string or arrays of the same, but not nested
      // objects. We can define/document how specific properties are interpreted
      // above the syntactic level of the schema.
      "@type": "cdl-data:properties",
      // cdl being the general platform, cudl just for cudl.lib.cam.ac.uk
      "@role": ["cdl-role:item-properties", "cudl-role:item-properties"],

      "embeddable": true,
      "useTranscriptions": true,
    },

    // Link to a TEI description of this item. The cdl:item-source role
    // indicates that this item JSON file should be augmented with item data
    // extracted from this TEI file.
    {
      "@type": "cdl-data:link",
      "@role": ["cdl-role:descriptive-metadata", "cdl-role:item-source"],
      "href": {"@id": "./item-example.tei"}
    }
  ],

    // Simplified form of "descriptiveMetadata" which also includes range
    // information from "logicalStructures", avoiding the need for that.
    // - Don't allow arbitrary nesting of objects, just one level with lists of
    //   values.
    // - Don't allow arbitrary objects, only "label"/"value" description objects
    // - Identifying description sections (the first level) and descriptions
    //   (second) with object keys (rather than say "name": "foo") is to
    //   facilitate merging, and for a more terse syntax. It also disallows
    //   repeated identifiers, which avoids a class of errors.
    // - order values replace "seq" integers to specify the order to display
    //   descriptions in. They're strings rather than integers, to allow human
    //   editors to create a somewhat understandable ordering scheme, with named
    //   subsections. e.g. "0.head" comes before "1.body". Also facilitates
    //   merging, as infinite ordering space exists between each key, unlike int
    //   values which you'd have to space apart to allow a merged desc to merge
    //   in between two existing descs.
    "descriptions": {
        // I'm thinking we can have a convention that the "main" description
        // describes the item as a whole, at least by default. We need something
        // like this as we no longer have an explicit hierarchy to know which is
        // the root.
        "main": {
            // coverage defines the range of pages the description applies to.
            // In JSON form I'm thinking integers can refer to actual
            // order-based page index of pages, with negative numbers counting
            // back from the end (-1 is the final page).
            // Strings for page references refer to page names. In the XML form
            // we can do something like
            //      <coverage firstPageIndex="0" lastPageIndex="-1"/>
            //      <coverage firstPage="3r" lastPage="4v"/>
            "coverage": { "firstPage": true, "lastPage": true },

            "attributes": {
                "title": {
                    // We don't need "display": true/false as the viewer knows to
                    // handle titles/abstracts etc specially and display them out
                    // of the normal list of attributes.
                    "label": "Title",
                    "value": "Book of Foo",
                    "order": "1"
                },
                "formerOwners": {
                    "label": "Former Owners",
                    "value": [
                        // Rather than "linktype": "keyword search" (which doesn't)
                        // work well because it searches for the entire value, often
                        // with dates, punctuation etc) I suggest we use a simple
                        // URI scheme to represent search queries, page references,
                        // etc (no more onclick="store.loadPage(blah)")
                        "<a href='cudl:///search?keyword=Joe%20Bloggs'>Bloggs, Joe, ca. 1082-1153</a>"
                    ],
                    "order": "2.{label}"
                }
            }
        },
        "3-4": {
            "coverage": { "firstPage": "1", "lastPage": "4" },

            "attributes": {
                "title": {
                    "label": "Title",
                    "value": "Excerpts from the Gospel of FooBar",
                    "order": "1"
                }
            }
        },


        "chapter1": {
            "coverage": { "firstPage": "10", "lastPage": "35" }

            // [...]
        }
    },

    // Simplified form of "pages"
    // As with "descriptions" keys are used to identify pages.
    // "order" can default to key.
    "pages": {
        "1": {
            "label": "cover",
            "resources": [
                { "@type": "cdl-page:image", "image-type": "iiif",
                  "image": {"@id": "https://images.lib.cam.ac.uk/iiif/fskdl"} },
                { "@type": "cdl-page:image", "image-type": "iiif",
                  "image": {"@id": "https://images.lib.cam.ac.uk/iiif/fskdl"} }
            ],
            "order": "a.cover"
        },
        // [...]
        "4": {
            "label": "2r",
            "resources": [
                { "@type": "cdl-page:image",
                  "image-type": "dzi",
                  "image": {"@id": "https://images.lib.cam.ac.uk/dzi/fskdl"} },
                { "@type": "cdl-page:transcription",
                  "transcription-type": "normalised",
                  "html": {"@id": "transcriptions/diplomatic/4.xml"} },
                { "@type": "cdl-page:transcription",
                  "transcription-type": "diplomatic",
                  "html": {"@id": "transcriptions/normalised.xml#4s"} }
            ],
            "order": "b.main.4"
        },

        // TODO: also use this pattern for properties
        "5": {
            "label": "3r",
            "resources": [
              { "@type": "cdl-page:image",
                "image-type": "iiif",
                "image": {"@id": "https://images.lib.cam.ac.uk/iiif/fskdl"} },
              { "@type": "cdl-page:image",
                "image-type": "dzi",
                "image": {"@id": "https://images.lib.cam.ac.uk/dzi/fskdl"} },
              { "@type": "cdl-page:image",
                "image-type": "file",
                "image": {"@id": "~images/ms-foo-1-p5.tif"} },
              { "@type": "cdl-page:transcription",
                "transcription-type": "normalised",
                "html": {"@id": "./ms-foo-1-p5.xml"} },
              { "@type": "cdl-page:transcription",
                "transcription-type": "diplomatic",
                "html": {"@id": "./ms-foo-1-p5.xml"} },
              { "@type": "cdl-page:translation",
                "html": {"@id": "./ms-foo-1-p5.xml"} },
              { "@type": "cudl-page:essay-content",
                "html": {"@id": "./ms-foo-1-p5-essay.xml"} }
            ]
        }
    }
}
